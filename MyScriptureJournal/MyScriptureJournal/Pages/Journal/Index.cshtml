@page
@model MyScriptureJournal.Pages.Journal.IndexModel

@{
    ViewData["Title"] = "Index";
}
    
        <h1 class="mb-3">Journal <span class="text-muted">Entries</span></h1>
        <div>
            <a class="alert-link" asp-page="Create">Create New</a>
        </div>
        <form class="my-3" asp-page="./Index" method="get">
            <div class="form-row align-items-center">
                <div class="col-auto">
                    <select class="form-control" asp-for="ScriptureBook" asp-items="Model.Books">
                        <option value="">All</option>
                    </select>
                </div>
                <div class="col-auto">
                    <input class="form-control" type="text" placeholder="Note keyword" asp-for="SearchString" />
                </div>
                <div class="col-auto">
                    <input class="btn btn-primary" type="submit" value="Filter" />
                </div>
            </div>
            <div class="mt-2">
                <span class="text-muted">Use the list to search by book. Use the text field to search by keyword. Use both to combine book and keyword search.</span>
            </div>
</form>
        <div class="table-responsive-md">
            <table class="table table-striped">
                <thead class="thead-light">
                    <tr>
                        <th class="text-center" scope="col">
                            <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort">
                                @Html.DisplayNameFor(model => model.Scripture[0].DateAdded)
                            </a>
                        </th>
                        <th class="text-center" scope="col">
                            <a asp-page="./Index" asp-route-sortOrder="@Model.BookSort">
                                @Html.DisplayNameFor(model => model.Scripture[0].Book)
                            </a>
                        </th>
                        <th class="text-center" scope="col">
                            @Html.DisplayNameFor(model => model.Scripture[0].Chapter)
                        </th>
                        <th class="text-center" scope="col">
                            @Html.DisplayNameFor(model => model.Scripture[0].Verse)
                        </th>
                        <th class="text-center" scope="col">
                            @Html.DisplayNameFor(model => model.Scripture[0].Note)
                        </th>
                        <th class="text-center" scope="col" colspan="3">
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Scripture)
                    {
        <tr>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.DateAdded)
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.Book)
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.Chapter)
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.Verse)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Note)
            </td>
            <td>
                <a class="btn btn-primary" asp-page="./Edit" asp-route-id="@item.ID">Edit</a>
            </td>
            <td>
                <a class="btn btn-info" asp-page="./Details" asp-route-id="@item.ID">Details</a>
            </td>
            <td>
                <a class="btn btn-danger" asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
                </tbody>
            </table>
        </div>